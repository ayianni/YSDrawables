//
//  YSDrawablesStyleKit.m
//  YSDrawables
//
//  Created by Alexander Yianni on 19/11/2015.
//  Copyright (c) 2015 Yianni Software Pty Ltd. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "YSDrawablesStyleKit.h"


@implementation YSDrawablesStyleKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawStarWithFrame: (CGRect)frame fillColor: (UIColor*)fillColor
{

    //// Star 2 Drawing
    UIBezierPath* star2Path = [UIBezierPath bezierPath];
    [star2Path moveToPoint: CGPointMake(CGRectGetMinX(frame) + 25, CGRectGetMinY(frame))];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 33.82, CGRectGetMinY(frame) + 12.86)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 48.78, CGRectGetMinY(frame) + 17.27)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 39.27, CGRectGetMinY(frame) + 29.64)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 39.69, CGRectGetMinY(frame) + 45.23)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 25, CGRectGetMinY(frame) + 40)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 10.31, CGRectGetMinY(frame) + 45.23)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 10.73, CGRectGetMinY(frame) + 29.64)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 1.22, CGRectGetMinY(frame) + 17.27)];
    [star2Path addLineToPoint: CGPointMake(CGRectGetMinX(frame) + 16.18, CGRectGetMinY(frame) + 12.86)];
    [star2Path closePath];
    [fillColor setFill];
    [star2Path fill];
}

+ (void)drawCircleWithFrame: (CGRect)frame fillColor: (UIColor*)fillColor
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 5, CGRectGetMinY(frame) + 4, CGRectGetWidth(frame) - 9, CGRectGetHeight(frame) - 9);


    //// Group
    {
        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(CGRectGetMinX(group) + floor(CGRectGetWidth(group) * 0.00000 + 0.5), CGRectGetMinY(group) + floor(CGRectGetHeight(group) * 0.00000 + 0.5), floor(CGRectGetWidth(group) * 1.00000 + 0.5) - floor(CGRectGetWidth(group) * 0.00000 + 0.5), floor(CGRectGetHeight(group) * 1.00000 + 0.5) - floor(CGRectGetHeight(group) * 0.00000 + 0.5))];
        [fillColor setFill];
        [ovalPath fill];
    }
}

+ (void)drawHexagonWithFrame: (CGRect)frame fillColor: (UIColor*)fillColor
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 4, CGRectGetMinY(frame) + 4, CGRectGetWidth(frame) - 8, CGRectGetHeight(frame) - 8);


    //// Group
    {
        //// Polygon Drawing
        UIBezierPath* polygonPath = [UIBezierPath bezierPath];
        [polygonPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.50000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.00000 * CGRectGetHeight(group))];
        [polygonPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.93301 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25000 * CGRectGetHeight(group))];
        [polygonPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.93301 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.75000 * CGRectGetHeight(group))];
        [polygonPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.50000 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [polygonPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.06699 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.75000 * CGRectGetHeight(group))];
        [polygonPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.06699 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.25000 * CGRectGetHeight(group))];
        [polygonPath closePath];
        [fillColor setFill];
        [polygonPath fill];
    }
}

+ (void)drawLightningWithFrame: (CGRect)frame fillColor: (UIColor*)fillColor strokeColor: (UIColor*)strokeColor
{


    //// Subframes
    CGRect group = CGRectMake(CGRectGetMinX(frame) + 6.5, CGRectGetMinY(frame) + 7.5, CGRectGetWidth(frame) - 12, CGRectGetHeight(frame) - 15);


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.52632 * CGRectGetWidth(group), CGRectGetMinY(group) + -0.00000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.52632 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51429 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 1.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.52632 * CGRectGetWidth(group), CGRectGetMinY(group) + 1.00000 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.31579 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.51429 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.68571 * CGRectGetHeight(group))];
        [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(group) + 0.00000 * CGRectGetWidth(group), CGRectGetMinY(group) + 0.20000 * CGRectGetHeight(group))];
        [bezierPath closePath];
        [fillColor setFill];
        [bezierPath fill];
        [strokeColor setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];
    }
}

@end
